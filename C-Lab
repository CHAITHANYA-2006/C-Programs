if Statements

Program-1

#include <stdio.h>

int main(){
    int a=10, b=10;

    if (a == b){
        printf("Both  are Equal.");
    }

    return 0;
}

Program-2

#include <stdio.h>

int main(){
    int a=10, b=20;

    if (a > b){
        printf("%d is greater number.",a);
    }

    else {
        printf("%d is greater number",b);
    }

    return 0;
}

Program-3

#include <stdio.h>

int main(){
    int a=10, b=20, c=5;

    if (a > b && a>c){
        printf("%d is greater number.",a);
    }

    else if (b > c && b > a){
        printf("%d is greater number.",b);
    }

    else {
        printf("%d is greater number.",c);
    }

    return 0;
}

Program-4

#include <stdio.h>

int main(){
    int num1, num2;

    printf("Enter number1: ");
    scanf("%d",&num1);

    printf("\nEnter number2: ");
    scanf("%d",&num2);

    if (num1 != num2){
        printf("Both are not Equal");


        if (num1 > num2){
            printf("\nnumber1 is greater than number 2");
        }

        else {
            printf("\nnumber2 is greater than number1");
        }
    }

    else {
        printf("Both are Equal");
    }

    return 0;
}

Program-5

#include <stdio.h>

int main() {
    int a, b, op;

    printf("Enter values of a and b: ");
    scanf("%d %d", &a, &b);

    printf("Keys for operation: \n");
    printf("1-Addition\n");
    printf("2-Subtraction\n");
    printf("3-Multiplication\n");
    printf("4-Division\n");

    printf("Enter operation key: ");
    scanf("%d", &op);

    switch(op){
        case 1:
            printf("%d + %d = %d", a, b, a+b);
            break;
        case 2:
            printf("%d - %d = %d", a, b, a-b);
            break;
        case 3:
            printf("%d * %d = %d", a, b, a*b);
            break;
        case 4:
            printf("%d / %d = %d", a, b, a/b);
            break;
        default :
            printf("Invalid Operation");
    }

    return 0;

}

Program-6

#include <stdio.h>

int main (){

    int marks;

    printf("Enter your marks: ");
    scanf("%d", &marks);

    if (marks >= 90){
        printf("Grade A");
    }
    else if (marks >= 80){
        printf("Grade B");
    }
    else if (marks >= 70){
        printf("Grade C");
    }
    else if (marks >= 60){
        printf("Grade D");
    }
    else {
        printf("Grade F");
    }

    return 0;
}

=================================================================================================================================================
CONDITIONAL 

#include <stdio.h>

int main() {
    for (int i = 1; i <= 10; i++){
        printf("%d\n", i);
    }
}

--------------------------------------------------------------------------

#include <stdio.h>

int main() {
    for (int i = 1; i <= 5; i++){

        for (int j = 1; j <= i; j++){
            printf("*");
        }

        printf("\n");
    }
}

---------------------------------------------------------------------------

#include <stdio.h>

int main() {
    for (int i = 1; i <= 5; i++){

        for (int j = 1; j <= i; j++){
            printf("%d", j);
        }

        printf("\n");
    }
}

---------------------------------------------------------------------------

#include <stdio.h>

int main() {
    for (int i = 1; i <= 5; i++){

        for (int j = 1; j <= i; j++){
            printf("%d", i);
        }

        printf("\n");
    }
}

---------------------------------------------------------------------------

#include <stdio.h>

int main() {
    int i = 1;

    while (i <= 10){
        printf("%d\n", i);
        i++;
    }
}

--------------------------------------------------------------------------

#include <stdio.h>

int main() {
    int i = 1;

    do {
        printf("inside the loop");
        i++;
    }
    while(i == 1);
    printf("\noutside  the loop");

}

==============================================================================================================================
UNCONDITIONAL

#include <stdio.h>

int main() {
    int a = 5;

    while (a <= 10){
        printf("%d\n", a);
        a++;

        if (a == 9){
            break;
        }
    }
}

----------------------------------------------------------------------------

#include <stdio.h>

int main() {
    int a = 5;

    while (a <= 10){

        if (a == 6){
            a++;
            continue;
        }

        printf("%d\n", a);
        a++;
    }
}

----------------------------------------------------------------------------

#include <stdio.h>

int main() {
    int a = 1;

    repeat:
            printf("%d\n", a);
            a++;

    if (a <= 10){

        goto repeat;

    }
}

===============================================================================================================================

ARRAYS

#include <stdio.h>

int main(){

    int i;
    int age[5] = { 1, 4, 7, 5, 3};

    for (i = 0; i < 5; i++){
        printf("age[%d] = %d\n", i, age[i]);
    }
    return 0;
}

----------------------------------------------------------------------------

#include <stdio.h>

int main(){

    int i, arr[7];

    printf("Enter elements in array: \n");
    for(i = 0; i < 7; i++){
        printf("Enter element %d:", i+1);
        scanf("%d", &arr[i]);
    }

    printf("Elements in array: \n");
    for(i = 0; i < 7; i++){
        printf("arr[%d] = %d\n", i, arr[i]);
    }
    return 0;
}

----------------------------------------------------------------------------
INSERT

#include <stdio.h>

int main(){

    int i, n, arr[20], value, index;

    printf("Enter size of array: ");
    scanf("%d", &n);

    printf("Enter elements in array: \n");
    for(i = 0; i < n; i++){
        printf("Enter element %d:", i+1);
        scanf("%d", &arr[i]);
    }

    printf("Elements in array: \n");
    for(i = 0; i < n; i++){
        printf("arr[%d] = %d\n", i, arr[i]);
    }

    printf("Enter value to insert: ");
    scanf("%d", &value);

    printf("Enter index to insert: ");
    scanf("%d", &index);

    for(i = n; i >= index - 1; i--){
        arr[i+1] = arr[i];
    }

    arr[index] = value;

    n+=1;

    printf("Updated array: \n");
    for(i = 0; i < n; i++){
        printf("arr[%d] = %d\n", i, arr[i]);
    }

    return 0;
}

-----------------------------------------------------------------------------
MERGE

#include <stdio.h>

int main(){

    int i, size1, size2, arr1[10], arr2[20];

    printf("Enter size of first array: ");
    scanf("%d", &size1);

    printf("Enter elements of first array: \n");
    for(i = 0; i < size1; i++){
        printf("Enter element %d:", i+1);
        scanf("%d", &arr1[i]);
    }

    printf("Enter size of second array: ");
    scanf("%d", &size2);

    printf("Enter elements of second array: \n");
    for(i = 0; i < size2; i++){
        printf("Enter element %d:", i+1);
        scanf("%d", &arr2[i]);
    }

    size2 += size1;

    for(i = 0; i < size2; i++){
        arr1[size1 + i] = arr2[i];
    }

    printf("Array after merging: \n");
    for(i = 0; i < size2; i++){
        printf("arr[%d] = %d\n", i, arr2[i]);
    }

    return 0;
}

------------------------------------------------------------------------------
SEARCH

#include <stdio.h>

int main(){

    int i, size1, size2, arr1[10], arr2[20];

    printf("Enter size of first array: ");
    scanf("%d", &size1);

    printf("Enter elements of first array: \n");
    for(i = 0; i < size1; i++){
        printf("Enter element %d:", i+1);
        scanf("%d", &arr1[i]);
    }

    printf("Enter size of second array: ");
    scanf("%d", &size2);

    printf("Enter elements of second array: \n");
    for(i = 0; i < size2; i++){
        printf("Enter element %d:", i+1);
        scanf("%d", &arr2[i]);
    }

    size2 += size1;

    for(i = 0; i < size2; i++){
        arr1[size1 + i] = arr2[i];
    }

    printf("Array after merging: \n");
    for(i = 0; i < size2; i++){
        printf("arr[%d] = %d\n", i, arr2[i]);
    }

    return 0;
}

-------------------------------------------------------------------------------------
SORTING

#include <stdio.h>

int main(){
    int a[20], n, i, j, temp;
    printf("Enter the size of array: ");
    scanf("%d", &n);

    printf("Enter elements in array: \n");
    for(i = 0; i < n; i++){
        printf("Enter element %d: ", i+1);
        scanf("%d", &a[i]);
    }

    printf("Elements in array are: \n");
    for(int i = 0; i < n; i++){
        printf("a[%d] = %d\n", i, a[i]);
    }

    for(i = 0; i < n; i++){
        for(j = i + 1; j < n; j++){
            if(a[j] < a[i]){
                temp = a[i];
                a[i] = a[j];
                a[j] = temp;
            }
        }
    }

    printf("Array elements in ascending order: \n");
    for(int i = 0; i < n; i++){
        printf("a[%d] = %d\n", i, a[i]);
    }
    return 0;
}

-------------------------------------------------------------------------------------
DELETION


-------------------------------------------------------------------------------------
2D ARRAY

#include <stdio.h>

int main(){
    int a[3][2] = {2,1,4,3,6,5};

    for(int i = 0; i < 3; i++){
        for(int j = 0; j < 2; j++){
            printf("a[%d][%d] = %d\n", i, j, a[i][j]);
        }
    }
    return 0;
}

--------------------------------------------------------------------------------------
3D SUM

#include<stdio.h>
int main()
{
    int a[3][3], b[3][3], add[3][3];
    int i, j;
    printf("Enter Matrix 1:");
    for(i = 0; i < 3; i++)
    {
        for(j = 0; j < 3; j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("Enter Matrix 2:");
    for(i = 0; i < 3; i++)
    {
        for(j = 0; j < 3; j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
    for(i = 0; i < 3; i++)
    {
        for(j = 0; j < 3; j++)
        {
            add[i][j] = a[i][j] + b[i][j];
        }
    }
    printf("\nAddition of matrix 1 and 2 is: \n");
    for(i = 0; i < 3; i++)
    {
        for(j = 0; j < 3; j++)
        {
            printf("%d ",add[i][j]);
        }
        printf("\n");
    }
    return 0;
}

------------------------------------------------------------------------------------
3D MULTIPLICATION

#include<stdio.h>
int main()
{
    int a[3][3], b[3][3], add[3][3];
    int i, j;
    printf("Enter Matrix 1:");
    for(i = 0; i < 3; i++)
    {
        for(j = 0; j < 3; j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("Enter Matrix 2:");
    for(i = 0; i < 3; i++)
    {
        for(j = 0; j < 3; j++)
        {
            scanf("%d",&b[i][j]);
        }
    }
    for(i = 0; i < 3; i++)
    {
        for(j = 0; j < 3; j++)
        {
            add[i][j] = a[i][j] * b[i][j];
        }
    }
    printf("\nAddition of matrix 1 and 2 is: \n");
    for(i = 0; i < 3; i++)
    {
        for(j = 0; j < 3; j++)
        {
            printf("%d ",add[i][j]);
        }
        printf("\n");
    }
    return 0;
}

==========================================================================================================================================

DYNAMIC MEMORY LOCATION

MALLOC

#include <stdio.h>
#include <stdlib.h>
int main(){
    int n, i, *ptr, sum = 0;

    printf("Enter number of elements: ");
    scanf("%d", &n);
    ptr = (int*)malloc(n*sizeof(int));

    if(ptr == NULL){
        printf("Error, memory not allocated.");
        exit(0);
    }

    printf("Enter elements in array: \n");
    for(i = 0; i < n; ++i){
        printf("Enter element %d: ", i + 1);
        scanf("%d",ptr + i);
        sum += *(ptr + i);
    }

    printf("Sum of elements in array: %d", sum);
    free(ptr);
    return 0;
}

---------------------------------------------------------------------------

CALLOC

#include <stdio.h>
#include <stdlib.h>
int main(){
    int n, i, *ptr, sum = 0;

    printf("Enter number of elements: ");
    scanf("%d", &n);
    ptr = (int*)calloc(n, sizeof(int));

    if(ptr == NULL){
        printf("Error, memory not allocated.");
        exit(0);
    }

    printf("Enter elements in array: \n");
    for(i = 0; i < n; ++i){
        printf("Enter element %d: ", i + 1);
        scanf("%d",ptr + i);
        sum += *(ptr + i);
    }

    printf("Sum of elements in array: %d", sum);
    free(ptr);
    return 0;
}

--------------------------------------------------------------------------

REALLOC

#include <stdio.h>
#include <stdlib.h>
int main(){
    int i, *ptr, n1, n2;

    printf("Enter number of elements: ");
    scanf("%d", &n1);
    ptr = (int*)malloc(n1*sizeof(int));

    printf("Address of previously allocated memory: \n");
    for(i = 0; i < n1; ++i){
        printf("%u\t", ptr + i);
    }

    printf("\nEnter new size of array: ");
    scanf("%d", &n2);
    ptr = realloc(ptr, n2);

    for(i = 0; i < n2; ++i){
    printf("%u\t", ptr + i);
    }
    return 0;
}

---------------------------------------------------------------------------

CHAR MALLOC

#include <stdio.h>
#include <string.h>

int main(){
    char name[100];
    char *description;
    strcpy(name, "Ravi");
    description = malloc( 200 * sizeof(char) );

    if( description == NULL ){
        fprintf(stderr, "Error, unable to allocate required memory\n");
    }

    else{
        strcpy( description, "Ravi a student in Amrita");
    }

    printf("Name: %s\n", name );
    printf("Description: %s\n", description );
    return 0;
}

-------------------------------------------------------------------------------

CHAR REALLOC

#include <stdio.h>
#include <string.h>

int main(){
    char name[100];
    char *description;
    strcpy(name, "Ravi");
    description = malloc( 200 * sizeof(char) );

    if( description == NULL ){
        fprintf(stderr, "Error, unable to allocate required memory\n");
    }

    else{
        strcpy( description, "Ravi a student in Amrita\n");
    }

    description = realloc( description, 100 * sizeof(char) );
    if( description == NULL ){
        fprintf(stderr, "Error, unable to allocate required memory\n");
    }
    else{
        strcat( description, "He is in B.tech");
    }

    printf("Name: %s\n", name );
    printf("Description: %s\n", description );
    return 0;
}

==========================================================================================================================

POINTER ARITHMETRIC

POINTER INCREMENT

#include<stdio.h>
int main(){
    int n, *pn, *pn1;
    pn = &n;
    pn1 = pn + 1;
    printf("%d %d\n", pn, pn1);
    double d, *pd, *pd1;
    pd = &d;
    pd1 = pd + 1;
    printf("%d %d\n", pd, pd1);
}

---------------------------------------------------------------------------------------

POINTER ARITHMETIC 2

#include<stdio.h>
int main(){
    int *ptr = (int *)1000;
    printf(“Old Value of ptr : %u",ptr);
    ptr = ptr + 1;
    printf("New Value of ptr : %u",ptr);
    return 0;
}

---------------------------------------------------------------------------------------

DIFFERENCE

#include<stdio.h>
int main(){
    float *ptr2=(float *)2000;
    printf("\nDifference : %d\n",ptr2-ptr1);
    return 0;
}

----------------------------------------------------------------------------------------

DIVISION

#include<stdio.h>
int main()
{
int *ptr1,*ptr2;
ptr1 = (int *)1000;
ptr2 = ptr1/4;
return(0);
}

-----------------------------------------------------------------------------------------
